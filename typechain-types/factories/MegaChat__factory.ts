/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { MegaChat, MegaChatInterface } from "../MegaChat";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "chatId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isGroup",
        type: "bool",
      },
    ],
    name: "ChatIdCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "groupId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "contentHash",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "GroupMessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "chatId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "contentHash",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mainWallet",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "username",
        type: "string",
      },
    ],
    name: "UsernameSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sessionWallet",
        type: "address",
      },
    ],
    name: "authorizeSessionWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "chatId",
        type: "bytes32",
      },
    ],
    name: "doesChatIdExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllChatIds",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user1",
        type: "address",
      },
      {
        internalType: "address",
        name: "user2",
        type: "address",
      },
    ],
    name: "getChatId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "chatId",
        type: "bytes32",
      },
    ],
    name: "getChatMessages",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "string",
            name: "contentHash",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "mainWallet",
            type: "address",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
        ],
        internalType: "struct MegaChat.Message[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "groupId",
        type: "bytes32",
      },
    ],
    name: "getGroupMessages",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "string",
            name: "contentHash",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "mainWallet",
            type: "address",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
        ],
        internalType: "struct MegaChat.Message[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRecentChats",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "string",
            name: "lastMessage",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct MegaChat.RecentChat[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUsernameByAddress",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sessionWallet",
        type: "address",
      },
    ],
    name: "revokeSessionWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "groupId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "contentHash",
        type: "string",
      },
    ],
    name: "sendGroupMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "string",
        name: "contentHash",
        type: "string",
      },
      {
        internalType: "address",
        name: "mainWallet",
        type: "address",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "username",
        type: "string",
      },
    ],
    name: "setUsername",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611873806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063ac45d6fa11610071578063ac45d6fa14610170578063add85fce14610191578063bc051524146101a4578063ec413eda146101d7578063ed1a998d146101ea578063ed59313a1461020a57600080fd5b806305293553146100b957806312d49f1b146100ce578063225d1d441461010a57806327a4036214610128578063952e909214610148578063a98eebd81461015d575b600080fd5b6100cc6100c7366004611160565b61021d565b005b6100cc6100dc3660046111c8565b3360009081526001602090815260408083206001600160a01b0394909416835292905220805460ff19169055565b6101126104e2565b60405161011f9190611230565b60405180910390f35b61013b6101363660046112bc565b6105fe565b60405161011f91906112d5565b610150610767565b60405161011f919061138a565b61013b61016b3660046112bc565b6107bf565b61018361017e3660046113ce565b61091d565b60405190815260200161011f565b6100cc61019f366004611401565b610993565b6101c76101b23660046112bc565b60009081526005602052604090205460ff1690565b604051901515815260200161011f565b6100cc6101e53660046111c8565b610d9f565b6101fd6101f83660046111c8565b610e21565b60405161011f9190611466565b6100cc610218366004611479565b610ecd565b826102625760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a590819dc9bdd5c08125160821b60448201526064015b60405180910390fd5b806102a95760405162461bcd60e51b8152602060048201526017602482015276436f6e74656e742063616e6e6f7420626520656d70747960481b6044820152606401610259565b60008381526005602052604090205460ff16610342576000838152600560209081526040808320805460ff1916600190811790915560068054808301825594527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f9093018690555191825284917f5e30ec9922ab9f381b03909f26ebc75ccab3d6548ef56173b7b0a1b01d34a03d910160405180910390a25b6000338484844260405160200161035d9594939291906114bb565b60408051601f19818403018152828252805160209182012060e084018352808452338483015260008484018190528351601f880184900484028101840190945286845290945092916060830191879087908190840183828082843760009201829052509385525050426020808501919091526040808501849052600160609586018190528b85526003808452828620805480840182559087529584902088516006909702019586559287015190850180546001600160a01b03199081166001600160a01b0393841617909155918701516002860180549093169116179055928401519394508493919283019161045491508261158e565b506080820151600482015560a08201516005909101805460c0909301511515600160a01b026001600160a81b03199093166001600160a01b0390921691909117919091179055604051339086907ed0141547d2461943f9a959e0de560d94b13a6a1e2efc66b4de355ab3a389ca906104d3908690899089904290611677565b60405180910390a35050505050565b336000908152600460209081526040808320805482518185028101850190935280835260609492939192909184015b828210156105f557600084815260209081902060408051606081019091526003850290910180546001600160a01b03168252600181018054929391929184019161055a90611505565b80601f016020809104026020016040519081016040528092919081815260200182805461058690611505565b80156105d35780601f106105a8576101008083540402835291602001916105d3565b820191906000526020600020905b8154815290600101906020018083116105b657829003601f168201915b5050505050815260200160028201548152505081526020019060010190610511565b50505050905090565b606060026000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561075c5760008481526020908190206040805160e081018252600686029092018054835260018101546001600160a01b039081169484019490945260028101549093169082015260038201805491929160608401919061069690611505565b80601f01602080910402602001604051908101604052809291908181526020018280546106c290611505565b801561070f5780601f106106e45761010080835404028352916020019161070f565b820191906000526020600020905b8154815290600101906020018083116106f257829003601f168201915b505050918352505060048201546020808301919091526005909201546001600160a01b0381166040830152600160a01b900460ff1615156060909101529082526001929092019101610633565b505050509050919050565b606060068054806020026020016040519081016040528092919081815260200182805480156107b557602002820191906000526020600020905b8154815260200190600101908083116107a1575b5050505050905090565b606060036000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561075c5760008481526020908190206040805160e081018252600686029092018054835260018101546001600160a01b039081169484019490945260028101549093169082015260038201805491929160608401919061085790611505565b80601f016020809104026020016040519081016040528092919081815260200182805461088390611505565b80156108d05780601f106108a5576101008083540402835291602001916108d0565b820191906000526020600020905b8154815290600101906020018083116108b357829003601f168201915b505050918352505060048201546020808301919091526005909201546001600160a01b0381166040830152600160a01b900460ff16151560609091015290825260019290920191016107f4565b6000806000836001600160a01b0316856001600160a01b031610610942578385610945565b84845b6040516bffffffffffffffffffffffff19606084811b8216602084015283901b1660348201529193509150604801604051602081830303815290604052805190602001209250505092915050565b80336001600160a01b03821614806109ce57506001600160a01b038116600090815260016020908152604080832033845290915290205460ff165b610a1a5760405162461bcd60e51b815260206004820152601b60248201527f556e617574686f72697a65642073657373696f6e2077616c6c657400000000006044820152606401610259565b6001600160a01b038516610a645760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b6044820152606401610259565b82610aab5760405162461bcd60e51b8152602060048201526017602482015276436f6e74656e742063616e6e6f7420626520656d70747960481b6044820152606401610259565b6000610ab7838761091d565b905060003387878742604051602001610ad49594939291906116a2565b60408051601f1981840301815291815281516020928301206000858152600590935291205490915060ff16610b84576000828152600560209081526040808320805460ff1916600190811790915560068054918201815584527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f018590555191825283917f5e30ec9922ab9f381b03909f26ebc75ccab3d6548ef56173b7b0a1b01d34a03d910160405180910390a25b60006040518060e00160405280838152602001336001600160a01b03168152602001896001600160a01b0316815260200188888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050426020808501919091526001600160a01b03808b16604080870191909152600160609687018190528a86526002808552828720805480840182559088529685902089516006909802019687559388015190860180549184166001600160a01b0319928316179055908701519285018054939092169216919091179055509082015191925082916003820190610c81908261158e565b506080820151600482015560a08201516005909101805460c0909301511515600160a01b026001600160a81b03199093166001600160a01b0390921691909117919091179055604080516020601f8901819004810282018101909252878152610d089187918b918b908b9081908401838280828437600092019190915250610fc192505050565b610d49888689898080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610fc192505050565b336001600160a01b0316837fa9e4af8deaaef8c8f24bf33f69ba281e097766ed5889695310d723b9386d051c848b8b8b428c604051610d8d969594939291906116e0565b60405180910390a35050505050505050565b6001600160a01b038116610dee5760405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081cd95cdcda5bdb881dd85b1b195d60521b6044820152606401610259565b3360009081526001602081815260408084206001600160a01b03959095168452939052919020805460ff19169091179055565b6001600160a01b0381166000908152602081905260409020805460609190610e4890611505565b80601f0160208091040260200160405190810160405280929190818152602001828054610e7490611505565b8015610ec15780601f10610e9657610100808354040283529160200191610ec1565b820191906000526020600020905b815481529060010190602001808311610ea457829003601f168201915b50505050509050919050565b80610f1a5760405162461bcd60e51b815260206004820152601860248201527f557365726e616d652063616e6e6f7420626520656d70747900000000000000006044820152606401610259565b6020811115610f5f5760405162461bcd60e51b8152602060048201526011602482015270557365726e616d6520746f6f206c6f6e6760781b6044820152606401610259565b336000908152602081905260409020610f79828483611724565b50336001600160a01b03167f74d8e560d2e870c35b35dc882df2a5c96e2bf1cdb5ef6dd2f9cb433c8d0488538383604051610fb59291906117e4565b60405180910390a25050565b6001600160a01b038316600090815260046020526040812090805b825481101561109457846001600160a01b031683828154811061100157611001611800565b60009182526020909120600390910201546001600160a01b031603611082578383828154811061103357611033611800565b90600052602060002090600302016001019081611050919061158e565b504283828154811061106457611064611800565b90600052602060002090600302016002018190555060019150611094565b8061108c81611816565b915050610fdc565b508061111057604080516060810182526001600160a01b03868116825260208083018781524294840194909452855460018082018855600088815292909220845160039092020180546001600160a01b0319169190931617825592519192909190820190611102908261158e565b506040820151816002015550505b5050505050565b60008083601f84011261112957600080fd5b50813567ffffffffffffffff81111561114157600080fd5b60208301915083602082850101111561115957600080fd5b9250929050565b60008060006040848603121561117557600080fd5b83359250602084013567ffffffffffffffff81111561119357600080fd5b61119f86828701611117565b9497909650939450505050565b80356001600160a01b03811681146111c357600080fd5b919050565b6000602082840312156111da57600080fd5b6111e3826111ac565b9392505050565b6000815180845260005b81811015611210576020818501810151868301820152016111f4565b506000602082860101526020601f19601f83011685010191505092915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156112ae57888303603f19018552815180516001600160a01b0316845287810151606089860181905290611290828701826111ea565b92890151958901959095525094870194925090860190600101611257565b509098975050505050505050565b6000602082840312156112ce57600080fd5b5035919050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156112ae57888303603f19018552815180518452878101516001600160a01b03908116898601528782015181168886015260608083015160e0828801819052929061134c848901826111ea565b608086810151908a015260a08087015193909316928901929092525060c09384015115159390960192909252505093860193908601906001016112fc565b6020808252825182820181905260009190848201906040850190845b818110156113c2578351835292840192918401916001016113a6565b50909695505050505050565b600080604083850312156113e157600080fd5b6113ea836111ac565b91506113f8602084016111ac565b90509250929050565b6000806000806060858703121561141757600080fd5b611420856111ac565b9350602085013567ffffffffffffffff81111561143c57600080fd5b61144887828801611117565b909450925061145b9050604086016111ac565b905092959194509250565b6020815260006111e360208301846111ea565b6000806020838503121561148c57600080fd5b823567ffffffffffffffff8111156114a357600080fd5b6114af85828601611117565b90969095509350505050565b6bffffffffffffffffffffffff198660601b1681528460148201528284603483013760349201918201526054019392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061151957607f821691505b60208210810361153957634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561158957600081815260208120601f850160051c810160208610156115665750805b601f850160051c820191505b8181101561158557828155600101611572565b5050505b505050565b815167ffffffffffffffff8111156115a8576115a86114ef565b6115bc816115b68454611505565b8461153f565b602080601f8311600181146115f157600084156115d95750858301515b600019600386901b1c1916600185901b178555611585565b600085815260208120601f198616915b8281101561162057888601518255948401946001909101908401611601565b508582101561163e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b84815260606020820152600061169160608301858761164e565b905082604083015295945050505050565b60006bffffffffffffffffffffffff19808860601b168352808760601b16601484015250838560288401375060289201918201526048019392505050565b868152600060018060a01b03808816602084015260a0604084015261170960a08401878961164e565b60608401959095529290921660809091015250949350505050565b67ffffffffffffffff83111561173c5761173c6114ef565b6117508361174a8354611505565b8361153f565b6000601f841160018114611784576000851561176c5750838201355b600019600387901b1c1916600186901b178355611110565b600083815260209020601f19861690835b828110156117b55786850135825560209485019460019092019101611795565b50868210156117d25760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b6020815260006117f860208301848661164e565b949350505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161183657634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220d9df528c7868daec5bd0f0b71c9b310b0ae52edf1fc3a45aff2a12b409c6fb4f64736f6c63430008140033";

type MegaChatConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MegaChatConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MegaChat__factory extends ContractFactory {
  constructor(...args: MegaChatConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MegaChat & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MegaChat__factory {
    return super.connect(runner) as MegaChat__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MegaChatInterface {
    return new Interface(_abi) as MegaChatInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MegaChat {
    return new Contract(address, _abi, runner) as unknown as MegaChat;
  }
}
